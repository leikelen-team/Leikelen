<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Accord.Extensions.Imaging.GenericImage</name>
    </assembly>
    <members>
        <member name="T:Accord.Extensions.Imaging.ColorInfo">
            <summary>
            Gets color information from color type and depth type.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorInfo.GetInfo``1">
            <summary>
            Gets color info (depth is taken from color).
            </summary>
            <typeparam name="TColor">Member of <see cref="T:Accord.Extensions.Imaging.IColor"/></typeparam>
            <returns>Color info</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorInfo.GetInfo(System.Type)">
            <summary>
            Gets color info (depth is taken from color).
            </summary>
            <param name="colorType">Color type. (member of IColor)</param>
            <returns>Color info</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorInfo.Equals(Accord.Extensions.Imaging.ColorInfo)">
            <summary>
            Determines whether the object is equal compared to the specified object. 
            A default comparison is used. Please see overloads.
            </summary>
            <param name="other">Other object.</param>
            <returns>True if two objects are equal, false otherwise.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorInfo.Equals(Accord.Extensions.Imaging.ColorInfo,Accord.Extensions.Imaging.ColorInfo.ComparableParts)">
            <summary>
            Compares two color infos.
            </summary>
            <param name="other">Other color info.</param>
            <param name="cParts">Indicates what to compare. Default is: ComparableParts.Default. </param>
            <returns></returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorInfo.ToString">
            <summary>
            Get string representation.
            </summary>
            <returns>String</returns>
        </member>
        <member name="P:Accord.Extensions.Imaging.ColorInfo.ColorType">
            <summary>
            Color type (IColor).
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.ColorInfo.ConversionCodename">
            <summary>
            Conversion codename. Not used. May be used for compatibility with EmguCV.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.ColorInfo.IsGenericColorSpace">
            <summary>
            Returns if the color-space is generic (e.g. Color3, Color4...) or not.
            Conversion from non-generic and generic color-spaces may be casted (does not require data conversion).
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.ColorInfo.ChannelCount">
            <summary>
            Number of channels that color has.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.ColorInfo.ChannelSize">
            <summary>
            Number of bytes per channel.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.ColorInfo.ChannelType">
            <summary>
            Channel type. Only primitive types are supported.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.ColorInfo.Size">
            <summary>
            Color size. Number of channels multiplied by channel size.
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.ColorInfo.ComparableParts">
            <summary>
            Indicates what parts of color info should be compared.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.ColorInfo.ComparableParts.Depth">
            <summary>
            Checks color depth type
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.ColorInfo.ComparableParts.Castable">
            <summary>
            Checks if one color can be casted to other (if colors are binary compatible).
            <para>
            One of the color infos must be Generic (or the same) 
            and have the same number of channels 
            and color channels must be the same type.
            </para>
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.ColorInfo.ComparableParts.Default">
            <summary>
            Checks color type and depth type (if it is true all other properties are equal as well)
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.ColorToArrayExtensions">
            <summary>
            Provides extensions for color to array conversion.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorToArrayExtensions.ColorToArray``2(``0)">
            <summary>
            Converts color to array of type <typeparamref name="TDepth"/>.
            </summary>
            <typeparam name="TColor">Color type.</typeparam>
            <typeparam name="TDepth">Channel type.</typeparam>
            <param name="color">Color</param>
            <returns>Array whose length is the same as color's number of channels.</returns>
        </member>
        <member name="T:Accord.Extensions.Imaging.Bgr`1">
            <summary>
            Represents Bgr color type of type <typeparam name="T">color depth</typeparam>.
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.IColor3`1">
            <summary>
            Generic interface for 3 channel color type. (Used for compile-time restrictions)
            </summary>
            <typeparam name="T">Channel type.</typeparam>
        </member>
        <member name="T:Accord.Extensions.Imaging.IColor3">
            <summary>
            Interface for 3 channel color type. (Used for compile-time restrictions)
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.IColor">
            <summary>
            Default interface for color types.
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.IColor`1">
            <summary>
            Default generic interface for color types.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgr`1.IdxB">
            <summary>
            Gets the index of the blue component.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgr`1.IdxG">
            <summary>
            Gets the index of the green component.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgr`1.IdxR">
            <summary>
            Gets the index of the red component.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.Bgr`1.#ctor(`0,`0,`0)">
            <summary>
            Creates new Bgr color.
            </summary>
            <param name="b">Blue</param>
            <param name="g">Green</param>
            <param name="r">Red</param>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgr`1.B">
            <summary>
            Gets or sets the blue component.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgr`1.G">
            <summary>
            Gets or sets the green component.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgr`1.R">
            <summary>
            Gets or sets the red component.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.Bgr`1.ToString">
            <summary>
            Gets the string color representation.
            </summary>
            <returns>String color representation.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.Bgr`1.Convert(Accord.Extensions.Imaging.Bgr{System.Byte}@,Accord.Extensions.Imaging.Gray{System.Byte}@)">
            <summary>
            Converts 8-bit Bgr to 8-bit gray intensity. 
            </summary>
            <param name="bgr">Source color.</param>
            <param name="gray">Destination color.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.Bgr`1.Convert(Accord.Extensions.Imaging.Bgr{System.Byte}@,Accord.Extensions.Imaging.Hsv{System.Byte}@)">
            <summary>
            Converts 8-bit Bgr to 8-bit Hsv color. Value range for 8-bit HSv color is  [0..180].
            </summary>
            <param name="bgr">Source color.</param>
            <param name="hsv">Destination color.</param>
        </member>
        <member name="P:Accord.Extensions.Imaging.Bgr`1.Red">
            <summary>
            Gets the 8-bit red color.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.Bgr`1.Blue">
            <summary>
            Gets the 8-bit blue color.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.Bgr`1.Green">
            <summary>
            Gets the 8-bit green color.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.Bgr`1.Black">
            <summary>
            Gets the 8-bit black color.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.Bgr`1.White">
            <summary>
            Gets the 8-bit white color.
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.Bgr8">
            <summary>
            Represents 8-bit Bgr color type.
            <para>Its usage should be restricted only for unsafe pixel manipulation.</para>
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgr8.B">
            <summary>
            Gets or sets the blue component.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgr8.G">
            <summary>
            Gets or sets the green component.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgr8.R">
            <summary>
            Gets or sets the red component.
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.Bgra`1">
            <summary>
            Represents Bgra color type of type <typeparam name="T">depth</typeparam>.
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.IColor4`1">
            <summary>
            Generic interface for 4 channel color type. (Used for compile-time restrictions)
            </summary>
            <typeparam name="T">Channel type.</typeparam>
        </member>
        <member name="T:Accord.Extensions.Imaging.IColor4">
            <summary>
            Interface for 4 channel color type. (Used for compile-time restrictions)
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgra`1.IdxB">
            <summary>
            Gets the index of the blue component.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgra`1.IdxG">
            <summary>
            Gets the index of the green component.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgra`1.IdxR">
            <summary>
            Gets the index of the red component.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgra`1.IdxA">
            <summary>
            Gets the index of the alpha component.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.Bgra`1.#ctor(`0,`0,`0,`0)">
            <summary>
            Creates new Bgra color.
            </summary>
            <param name="b">Blue</param>
            <param name="g">Green</param>
            <param name="r">Red</param>
            <param name="a">Alpha (transparency).</param>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgra`1.B">
            <summary>
            Gets or sets the blue component.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgra`1.G">
            <summary>
            Gets or sets the green component.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgra`1.R">
            <summary>
            Gets or sets the red component.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Bgra`1.A">
            <summary>
            Gets or sets the alpha component.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.Bgra`1.ToString">
            <summary>
            Gets the string color representation.
            </summary>
            <returns>String color representation.</returns>
        </member>
        <member name="T:Accord.Extensions.Imaging.ColorInfoAttribute">
            <summary>
            Color info attribute. 
            Contains informations about conversion name and specifies whether the structure is generic color space or not.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.ColorInfoAttribute.DEFAULT_CONVERSION_CODENAME">
            <summary>
            Gets the default conversion name.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorInfoAttribute.#ctor">
            <summary>
            Creates the new instance of an <see cref="T:Accord.Extensions.Imaging.ColorInfoAttribute"/>.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.ColorInfoAttribute.ConversionCodename">
            <summary>
            Gets or sets conversion codename. Not used. (May be used for EmguCV compatibility)
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.ColorInfoAttribute.IsGenericColorSpace">
            <summary>
            Gets or sets whether the color space is generic (does not require data conversion).
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.Gray`1">
            <summary>
            Represents gray color of type <typeparam name="T">color depth</typeparam>.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.Gray`1.#ctor(`0)">
            <summary>
            Creates new gray color.
            </summary>
            <param name="intensity">Intensity.</param>
        </member>
        <member name="F:Accord.Extensions.Imaging.Gray`1.Intensity">
            <summary>
            Gets or sets the intensity.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.Gray`1.op_Implicit(Accord.Extensions.Imaging.Gray{`0})~`0">
            <summary>
            Converts gray structure to <typeparamref name="T"/> value.
            </summary>
            <param name="gray">Gray color.</param>
            <returns>Intensity.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.Gray`1.op_Implicit(`0)~Accord.Extensions.Imaging.Gray{`0}">
            <summary>
            Converts intensity of type <see cref="T:System.Double"/> to Gray color.
            </summary>
            <param name="intensity">Intensity.</param>
            <returns>Gray color.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.Gray`1.ToString">
            <summary>
            Gets the string color representation.
            </summary>
            <returns>String color representation.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.Gray`1.Convert(Accord.Extensions.Imaging.Gray{`0}@,Accord.Extensions.Imaging.Bgr{`0}@)">
            <summary>
            Converts 8-bit gray intensity to the 8-bit Bgr color.
            </summary>
            <param name="gray">Source color.</param>
            <param name="bgr">Destination color.</param>
        </member>
        <member name="T:Accord.Extensions.Imaging.Hsv`1">
            <summary>
            Represents Hsv color type of type <typeparam name="T">color depth</typeparam>.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Hsv`1.IdxH">
            <summary>
            Gets the index of the hue component.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Hsv`1.IdxS">
            <summary>
            Gets the index of the saturation component.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Hsv`1.IdxV">
            <summary>
            Gets the index of the value component.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.Hsv`1.#ctor(`0,`0,`0)">
            <summary>
            Creates new Hsv color.
            </summary>
            <param name="hue">Hue</param>
            <param name="saturation">Saturation</param>
            <param name="value">Value.</param>
        </member>
        <member name="F:Accord.Extensions.Imaging.Hsv`1.H">
            <summary>
            Gets or sets hue.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Hsv`1.S">
            <summary>
            Gets or sets saturation.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Hsv`1.V">
            <summary>
            Gets or sets value.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.Hsv`1.ToString">
            <summary>
            Gets the string color representation.
            </summary>
            <returns>String color representation.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.Hsv`1.Convert(Accord.Extensions.Imaging.Hsv{System.Byte}@,Accord.Extensions.Imaging.Bgr{System.Byte}@)">
            <summary>
            Converts 8-bit Hsv color to the 8-bit Bgr color.
            </summary>
            <param name="hsv">Source color.</param>
            <param name="bgr">Destination color.</param>
        </member>
        <member name="T:Accord.Extensions.Imaging.Hsv8">
            <summary>
            Represents 8-bit Hsv color type.
            <para>Its usage should be restricted only for unsafe pixel manipulation.</para>
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Hsv8.H">
            <summary>
            Gets or sets hue.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Hsv8.S">
            <summary>
            Gets or sets saturation.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.Hsv8.V">
            <summary>
            Gets or sets value.
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.IColor2">
            <summary>
            Interface for 2 channel color type. (Used for compile-time restrictions)
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.IColor2`1">
            <summary>
            Generic interface for 2 channel color type. (Used for compile-time restrictions)
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.ColorConversionExtensions">
            <summary>
            Provides color conversion extension methods.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.Cast``1(Accord.Extensions.Imaging.Gray{System.Byte}[0:,0:])">
            <summary>
            Converts the source channel depth to the destination channel depth.
            </summary>
            <typeparam name="TDepth">Destination channel depth.</typeparam>
            <param name="image">Image.</param>
            <returns>Image with converted element depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.Cast``1(Accord.Extensions.Imaging.Gray{System.Int16}[0:,0:])">
            <summary>
            Converts the source channel depth to the destination channel depth.
            </summary>
            <typeparam name="TDepth">Destination channel depth.</typeparam>
            <param name="image">Image.</param>
            <returns>Image with converted element depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.Cast``1(Accord.Extensions.Imaging.Gray{System.Int32}[0:,0:])">
            <summary>
            Converts the source channel depth to the destination channel depth.
            </summary>
            <typeparam name="TDepth">Destination channel depth.</typeparam>
            <param name="image">Image.</param>
            <returns>Image with converted element depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.Cast``1(Accord.Extensions.Imaging.Gray{System.Single}[0:,0:])">
            <summary>
            Converts the source channel depth to the destination channel depth.
            </summary>
            <typeparam name="TDepth">Destination channel depth.</typeparam>
            <param name="image">Image.</param>
            <returns>Image with converted element depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.Cast``1(Accord.Extensions.Imaging.Gray{System.Double}[0:,0:])">
            <summary>
            Converts the source channel depth to the destination channel depth.
            </summary>
            <typeparam name="TDepth">Destination channel depth.</typeparam>
            <param name="image">Image.</param>
            <returns>Image with converted element depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.ToBgr(Accord.Extensions.Imaging.Gray{System.Byte}[0:,0:])">
            <summary>
            Converts the source color to the destination color.
            </summary>
            <param name="grayIm">Source image.</param>
            <returns>image with converted color.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.ToBgr(Accord.Extensions.Imaging.Gray{System.Byte}[0:,0:],Accord.Extensions.Rectangle)">
            <summary>
            Converts the source color to the destination color.
            </summary>
            <param name="grayIm">Source image.</param>
            <param name="area">Working area.</param>
            <returns>image with converted color.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.Cast``1(Accord.Extensions.Imaging.Bgr{System.Byte}[0:,0:])">
            <summary>
            Converts the source channel depth to the destination channel depth.
            </summary>
            <typeparam name="TDepth">Destination channel depth.</typeparam>
            <param name="image">Image.</param>
            <returns>Image with converted element depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.Cast``1(Accord.Extensions.Imaging.Bgr{System.Int16}[0:,0:])">
            <summary>
            Converts the source channel depth to the destination channel depth.
            </summary>
            <typeparam name="TDepth">Destination channel depth.</typeparam>
            <param name="image">Image.</param>
            <returns>Image with converted element depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.Cast``1(Accord.Extensions.Imaging.Bgr{System.Int32}[0:,0:])">
            <summary>
            Converts the source channel depth to the destination channel depth.
            </summary>
            <typeparam name="TDepth">Destination channel depth.</typeparam>
            <param name="image">Image.</param>
            <returns>Image with converted element depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.Cast``1(Accord.Extensions.Imaging.Bgr{System.Single}[0:,0:])">
            <summary>
            Converts the source channel depth to the destination channel depth.
            </summary>
            <typeparam name="TDepth">Destination channel depth.</typeparam>
            <param name="image">Image.</param>
            <returns>Image with converted element depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.Cast``1(Accord.Extensions.Imaging.Bgr{System.Double}[0:,0:])">
            <summary>
            Converts the source channel depth to the destination channel depth.
            </summary>
            <typeparam name="TDepth">Destination channel depth.</typeparam>
            <param name="image">Image.</param>
            <returns>Image with converted element depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.ToGray(Accord.Extensions.Imaging.Bgr{System.Byte}[0:,0:])">
            <summary>
            Converts the source color to the destination color.
            </summary>
            <param name="image">Source image.</param>
            <returns>image with converted color.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.ToGray(Accord.Extensions.Imaging.Bgr{System.Byte}[0:,0:],Accord.Extensions.Rectangle)">
            <summary>
            Converts the source color to the destination color.
            </summary>
            <param name="image">Source image.</param>
            <param name="area">Working area.</param>
            <returns>image with converted color.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.ToHsv(Accord.Extensions.Imaging.Bgr{System.Byte}[0:,0:])">
            <summary>
            Converts the source color to the destination color.
            </summary>
            <param name="image">Source image.</param>
            <returns>image with converted color.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.ToHsv(Accord.Extensions.Imaging.Bgr{System.Byte}[0:,0:],Accord.Extensions.Rectangle)">
            <summary>
            Converts the source color to the destination color.
            </summary>
            <param name="image">Source image.</param>
            <param name="area">Working area.</param>
            <returns>image with converted color.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.Cast``1(Accord.Extensions.Imaging.Hsv{System.Byte}[0:,0:])">
            <summary>
            Converts the source channel depth to the destination channel depth.
            </summary>
            <typeparam name="TDepth">Destination channel depth.</typeparam>
            <param name="image">Image.</param>
            <returns>Image with converted element depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.Cast``1(Accord.Extensions.Imaging.Hsv{System.Int16}[0:,0:])">
            <summary>
            Converts the source channel depth to the destination channel depth.
            </summary>
            <typeparam name="TDepth">Destination channel depth.</typeparam>
            <param name="image">Image.</param>
            <returns>Image with converted element depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.Cast``1(Accord.Extensions.Imaging.Hsv{System.Int32}[0:,0:])">
            <summary>
            Converts the source channel depth to the destination channel depth.
            </summary>
            <typeparam name="TDepth">Destination channel depth.</typeparam>
            <param name="image">Image.</param>
            <returns>Image with converted element depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.Cast``1(Accord.Extensions.Imaging.Hsv{System.Single}[0:,0:])">
            <summary>
            Converts the source channel depth to the destination channel depth.
            </summary>
            <typeparam name="TDepth">Destination channel depth.</typeparam>
            <param name="image">Image.</param>
            <returns>Image with converted element depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.Cast``1(Accord.Extensions.Imaging.Hsv{System.Double}[0:,0:])">
            <summary>
            Converts the source channel depth to the destination channel depth.
            </summary>
            <typeparam name="TDepth">Destination channel depth.</typeparam>
            <param name="image">Image.</param>
            <returns>Image with converted element depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.ToBgr(Accord.Extensions.Imaging.Hsv{System.Byte}[0:,0:])">
            <summary>
            Converts the source color to the destination color.
            </summary>
            <param name="image">Source image.</param>
            <returns>image with converted color.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ColorConversionExtensions.ToGray(Accord.Extensions.Imaging.Hsv{System.Byte}[0:,0:],Accord.Extensions.Rectangle)">
            <summary>
            Converts the source color to the destination color.
            </summary>
            <param name="image">Source image.</param>
            <param name="area">Working area.</param>
            <returns>image with converted color.</returns>
        </member>
        <member name="T:Accord.Extensions.Imaging.PrimitiveChannelTypeConversionExtensions">
            <summary>
            Provides channel depth conversion extensions.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.PrimitiveChannelTypeConversionExtensions.ConvertChannelDepth``2(``0[0:,0:])">
            <summary>
            Converts each channel of the source color to the channel of the specified destination color.
            </summary>
            <typeparam name="TColorSrc">Source color type.</typeparam>
            <typeparam name="TColorDst">Destination color type.</typeparam>
            <param name="source">Source array.</param>
            <returns>Array which elements have changed depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.PrimitiveChannelTypeConversionExtensions.ConvertChannelDepth``2(``0[0:,0:],Accord.Extensions.Rectangle)">
            <summary>
            Converts each channel of the source color to the channel of the specified destination color.
            </summary>
            <typeparam name="TColorSrc">Source color type.</typeparam>
            <typeparam name="TColorDst">Destination color type.</typeparam>
            <param name="source">Source array.</param>
            <param name="area">Working area.</param>
            <returns>Array which elements have changed depth.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.PrimitiveChannelTypeConversionExtensions.ConvertChannelDepth``2(Accord.Extensions.Imaging.Image{``0})">
            <summary>
            Converts each channel of the source color to the channel of the specified destination color.
            </summary>
            <typeparam name="TColorSrc">Source color type.</typeparam>
            <typeparam name="TColorDst">Destination color type.</typeparam>
            <param name="source">Source image.</param>
            <returns>Array which elements have changed depth.</returns>
        </member>
        <member name="T:Accord.Extensions.Imaging.ArrayImageBasicExtensions">
            <summary>
            Provides basic image extensions for a two-dimensional array.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.ArrayImageBasicExtensions.Width``1(``0[0:,0:])">
            <summary>
            Gets image width.
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="image">Image.</param>
            <returns>The image width.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ArrayImageBasicExtensions.Height``1(``0[0:,0:])">
            <summary>
            Gets image height.
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="image">Image.</param>
            <returns>The image height.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ArrayImageBasicExtensions.Size``1(``0[0:,0:])">
            <summary>
            Gets image size.
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="image">Image.</param>
            <returns>The image size.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ArrayImageBasicExtensions.Lock``1(``0[0:,0:])">
            <summary>
            Pins the array and returns the corresponding generic image.
            </summary>
            <typeparam name="TColor">Color type.</typeparam>
            <param name="array">The array to lock.</param>
            <returns>The generic image which shares data with the pined array.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ArrayImageBasicExtensions.Lock``1(``0[0:,0:],Accord.Extensions.Rectangle)">
            <summary>
            Pins the array and returns the corresponding generic image of a specified portion.
            </summary>
            <typeparam name="TColor">Color type.</typeparam>
            <param name="array">The array to lock.</param>
            <param name="area">Working area.</param>
            <returns>The generic image which shares data with the pined array.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ArrayImageBasicExtensions.SetValue``1(``0[0:,0:],``0)">
            <summary>
            Sets the specified value for each element of the array.
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="array">Array with value type elements.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.ArrayImageBasicExtensions.SetValue``1(``0[0:,0:],``0,Accord.Extensions.Rectangle)">
            <summary>
            Sets the specified value for each element of the array.
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="array">Array with value type elements.</param>
            <param name="value">Value to set.</param>
            <param name="area">Working area.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.ArrayImageBasicExtensions.Clear``1(``0[0:,0:])">
            <summary>
            Sets all elements of the array to the default value.
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="array">Array to clear.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.ArrayImageBasicExtensions.Clone``1(``0[0:,0:])">
            <summary>
            Performs deep cloning of the specified array.
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="array">Array.</param>
            <returns>Cloned array.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ArrayImageBasicExtensions.CopyBlank``1(``0[0:,0:])">
            <summary>
            Creates new array of the same size as the source array.
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="array">Array.</param>
            <returns>New empty array.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ArrayImageBasicExtensions.ColorInfo``1(``0[0:,0:])">
            <summary>
            Gets the element info of the specified array.
            </summary>
            <typeparam name="TColor">Element type.</typeparam>
            <param name="source">Array.</param>
            <returns>Array element info.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ArrayImageBasicExtensions.CalculateStride``1(``0,System.Int32)">
            <summary>
            Calculates image stride for the specified alignment.
            </summary>
            <param name="image">Image.</param>
            <param name="allignment">Data alignment.</param>
            <returns>Image stride.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ArrayImageBasicExtensions.Calculate``1(``0[0:,0:],``0[0:,0:],Accord.Extensions.Imaging.ArrayImageBasicExtensions.UnsafeTwoSourceFilterFunc,System.Boolean)">
            <summary>
            Executes the user defined two source filter operation.
            </summary>
            <typeparam name="TColor">Image color.</typeparam>
            <param name="imageA">First image.</param>
            <param name="imageB">Second image.</param>
            <param name="func">User defined operation.</param>
            <param name="inPlace">If true the result is going to be stored in the first image. If false a new image is going to be created.</param>
            <returns>he result image. If <paramref name="inPlace"/> is set to true, the return value can be discarded.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ArrayImageBasicExtensions.Calculate``1(``0[0:,0:],``0[0:,0:],Accord.Extensions.Imaging.TwoSourceFilterFunc{``0},System.Boolean)">
            <summary>
            Executes the user defined two source filter operation.
            </summary>
            <typeparam name="TColor">Image color.</typeparam>
            <param name="imageA">First image.</param>
            <param name="imageB">Second image.</param>
            <param name="func">User defined operation.</param>
            <param name="inPlace">If true the result is going to be stored in the first image. If false a new image is going to be created.</param>
            <returns>he result image. If <paramref name="inPlace"/> is set to true, the return value can be discarded.</returns>
        </member>
        <member name="T:Accord.Extensions.Imaging.ArrayImageBasicExtensions.UnsafeTwoSourceFilterFunc">
            <summary>
            Two source filter operation.
            </summary>
            <param name="sourceA">First image.</param>
            <param name="sourceB">Second image.</param>
            <param name="destination">Destination image.</param>
        </member>
        <member name="T:Accord.Extensions.Imaging.TwoSourceFilterFunc`1">
            <summary>
            Two source filter operation.
            </summary>
            <param name="src1">First image.</param>
            <param name="src2">Second image.</param>
            <param name="dest">Destination image.</param>
        </member>
        <member name="T:Accord.Extensions.Imaging.ChannelMerger">
            <summary>
            Provides channel merge extensions.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.ChannelMerger.MergeChannels``2(System.Collections.Generic.IList{Accord.Extensions.Imaging.Gray{``1}[0:,0:]},System.Int32[])">
            <summary>
            Combines provided channels into single image with interleaved channels.
            </summary>
            <typeparam name="TSrcColor">Source color type.</typeparam>
            <typeparam name="TDepth">Channel depth type.</typeparam>
            <param name="channels">Channel collection.</param>
            <param name="channelIndices">Channel indicies. If null, all channels are taken.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ChannelMerger.MergeChannels``2(System.Collections.Generic.IList{Accord.Extensions.Imaging.Gray{``1}[0:,0:]},Accord.Extensions.Rectangle,System.Int32[])">
            <summary>
            Combines provided channels into single image with interleaved channels.
            </summary>
            <typeparam name="TSrcColor">Source color type.</typeparam>
            <typeparam name="TDepth">Channel depth type.</typeparam>
            <param name="channels">Channel collection.</param>
            <param name="area">Working area.</param>
            <param name="channelIndices">Channel indicies. If null, all channels are taken.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ChannelMerger.ReplaceChannel``2(``0[0:,0:],Accord.Extensions.Imaging.Gray{``1}[0:,0:],System.Int32)">
            <summary>
            Replaces the selected image channel with the specified channel.
            </summary>
            <typeparam name="TSrcColor">Source color type.</typeparam>
            <typeparam name="TDepth">Channel depth type.</typeparam>
            <param name="image">Image.</param>
            <param name="channel">Channel.</param>
            <param name="channelIndex">Index of a channel to replace.</param>
        </member>
        <member name="T:Accord.Extensions.Imaging.ChannelSplitter">
            <summary>
            Provides channel splitting extensions.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.ChannelSplitter.SplitChannels``2(``0[0:,0:],System.Int32[])">
            <summary>
            Extracts the specified image channels.
            </summary>
            <typeparam name="TSrcColor">Source color type.</typeparam>
            <typeparam name="TDepth">Channel depth type.</typeparam>
            <param name="image">Image.</param>
            <param name="channelIndices">Channel indicies to extract. If null, all channels are extracted.</param>
            <returns>Channel collection.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ChannelSplitter.SplitChannels``2(``0[0:,0:],Accord.Extensions.Rectangle,System.Int32[])">
            <summary>
            Extracts the specified image channels.
            </summary>
            <typeparam name="TSrcColor">Source color type.</typeparam>
            <typeparam name="TDepth">Channel depth type.</typeparam>
            <param name="image">Image.</param>
            <param name="area">Working area.</param>
            <param name="channelIndices">Channel indicies to extract. If null, all channels are extracted.</param>
            <returns>Channel collection.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ChannelSplitter.GetChannel``2(``0[0:,0:],System.Int32)">
            <summary>
            Extracts a single image channel.
            </summary>
            <typeparam name="TSrcColor">Source color type.</typeparam>
            <typeparam name="TDepth">Channel depth type.</typeparam>
            <param name="image">Image.</param>
            <param name="channelIndex">Channel index.</param>
            <returns>Extracted channel.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ChannelSplitter.GetChannel``2(``0[0:,0:],Accord.Extensions.Rectangle,System.Int32)">
            <summary>
            Extracts a single image channel.
            </summary>
            <typeparam name="TSrcColor">Source color type.</typeparam>
            <typeparam name="TDepth">Channel depth type.</typeparam>
            <param name="image">Image.</param>
            <param name="area">Working area.</param>
            <param name="channelIndex">Channel index.</param>
            <returns>Extracted channel.</returns>
        </member>
        <member name="T:Accord.Extensions.Imaging.Copy">
            <summary>
            Provides methods for unsafe data copying as well as extensions for generic image and array cloning.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.Copy.UnsafeCopy(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies unmanaged data from the specified source to the specified destination patch.
            </summary>
            <param name="srcPtr">Source pointer.</param>
            <param name="destPtr">Destination pointer.</param>
            <param name="srcStride">Source stride.</param>
            <param name="destStride">Destination stride.</param>
            <param name="patchStride">Amount of bytes per row to be copied (width for byte fields). (common: image width * color size)</param>
            <param name="patchHeight">Field's height.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.Copy.UnsafeCopy(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies unmanaged data from the specified source to the specified destination.
            </summary>
            <param name="srcPtr">Source pointer.</param>
            <param name="destPtr">Destination pointer.</param>
            <param name="srcStride">Source stride.</param>
            <param name="destStride">Destination stride.</param>
            <param name="destHeight">Field's height.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.Copy.Clone``1(``0[0:,0:],Accord.Extensions.Rectangle)">
            <summary>
            Clones the portion of the provided array.
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="array">Array.</param>
            <param name="area">Working area.</param>
            <returns>Cloned portion of the array.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.Copy.Clone``1(Accord.Extensions.Imaging.Image{``0})">
            <summary>
            Clones the provided image.
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="image">Image.</param>
            <returns>Cloned image.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.Copy.CopyTo``1(Accord.Extensions.Imaging.Image{``0},Accord.Extensions.Imaging.Image{``0})">
            <summary>
            Copies the specified source image to the destination image.
            <para>Source and destination image must have the same size.</para>
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="source">Source image.</param>
            <param name="destination">Destination image.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.Copy.CopyTo``1(Accord.Extensions.Imaging.Image{``0},``0[0:,0:])">
            <summary>
            Copies the specified source image to the destination image.
            <para>Source and destination image must have the same size.</para>
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="source">Source image.</param>
            <param name="destination">Destination image.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.Copy.CopyTo``1(``0[0:,0:],``0[0:,0:],AForge.IntPoint)">
            <summary>
            Copies the specified source image to the destination image.
            <para>Source and destination image must have the same size.</para>
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="source">Source image.</param>
            <param name="destination">Destination image.</param>
            <param name="destinationOffset">Destination location.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.Copy.CopyToOrCreate``1(Accord.Extensions.Imaging.Image{``0},``0[0:,0:]@)">
            <summary>
            Copies the image source to the destination buffer. 
            If the buffer does not have the same size as the source image, or the buffer is null, the destination buffer will be recreated.
            </summary>
            <typeparam name="TColor">Color type.</typeparam>
            <param name="source">Source image.</param>
            <param name="destinationBuffer">destination buffer.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.Copy.CopyTo``1(``0[0:,0:],``0[0:,0:],Accord.Extensions.Imaging.Gray{System.Byte}[0:,0:])">
            <summary>
            Copies values from source to destination image using mask. Destination values where mask == 0 are not erased!.
            </summary>
            <param name="source">Image.</param>
            <param name="destination">Destination image</param>
            <param name="mask">Mask. Color locations that need to be copied must be set to !=0 in mask.</param>
        </member>
        <member name="T:Accord.Extensions.Imaging.Convert`2">
            <summary>
            element conversion delegate.
            </summary>
            <typeparam name="TSrc">Source element type.</typeparam>
            <typeparam name="TDst">Destination element type.</typeparam>
            <param name="source">Source element.</param>
            <param name="destination">Destination element.</param>
        </member>
        <member name="T:Accord.Extensions.Imaging.ConvertExtensions">
            <summary>
            Provides generic element conversion extensions.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.ConvertExtensions.Convert``2(``0[0:,0:],Accord.Extensions.Imaging.Convert{``0,``1})">
            <summary>
            Converts each element of the array by using the specified conversion function.
            </summary>
            <typeparam name="TSrc">Source element type.</typeparam>
            <typeparam name="TDst">Destination element type.</typeparam>
            <param name="source">Source array.</param>
            <param name="convert">Conversion function.</param>
            <returns>Destination array.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ConvertExtensions.Convert``2(``0[0:,0:],Accord.Extensions.Imaging.Convert{``0,``1},Accord.Extensions.Rectangle)">
            <summary>
            Converts each element of the array by using the specified conversion function.
            </summary>
            <typeparam name="TSrc">Source element type.</typeparam>
            <typeparam name="TDst">Destination element type.</typeparam>
            <param name="source">Source array.</param>
            <param name="convert">Conversion function.</param>
            <param name="area">Working area.</param>
        </member>
        <member name="T:Accord.Extensions.Imaging.FlipDirection">
            <summary>
            Flip image direction. 
            They can be used as bit flags.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.FlipDirection.None">
            <summary>
            No flipping.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.FlipDirection.Horizontal">
            <summary>
            Horizontal flipping.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.FlipDirection.Vertical">
            <summary>
            Vertical flipping
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.FlipDirection.All">
            <summary>
            All flipping (horizontal + vertical).
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.ImageFlipping">
            <summary>
            Contains extension methods for image flipping.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.ImageFlipping.FlipImage``1(``0[0:,0:],Accord.Extensions.Imaging.FlipDirection)">
            <summary>
            Flips an input image horizontally / vertically / both directions / or none (data copy).
            </summary>
            <typeparam name="TColor">Color type.</typeparam>
            <param name="source">Input image.</param>
            <param name="flipDirection">Flip direction.</param>
            <returns>Returns flipped image.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ImageFlipping.FlipImage``1(``0[0:,0:],Accord.Extensions.Rectangle,``0[0:,0:],AForge.IntPoint,Accord.Extensions.Imaging.FlipDirection)">
            <summary>
            Flips an input image horizontally / vertically / both directions / or none (data copy).
            </summary>
            <typeparam name="TColor">Color type.</typeparam>
            <param name="source">Input image.</param>
            <param name="sourceArea">Source area.</param>
            <param name="destination">Destination image.</param>
            <param name="destinationOffset">Destination image offset.</param>
            <param name="flipDirection">Flip direction.</param>
        </member>
        <member name="T:Accord.Extensions.Imaging.IplImage">
            <summary>
            Represents the OpenCV's IplImage structure which enables OpenCV / EmguCV interoperability.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.IPL_DEPTH_SIGN">
            <summary>
            Constant for signed data types.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.StructureSize">
            <summary>
            Size of the structure
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.ID">
            <summary>
            Version, always equal 0
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.NumberOfChannels">
            <summary>
            Number of channels. Most OpenCV functions support 1-4 channels.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.AlphaChannel">
            <summary>
            Ignored by OpenCV (set to zero).
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.ChannelDepth">
            <summary>
            Channel depth in bits + the optional sign bit
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.ColorModel">
            <summary>
            Ignored by OpenCV. The OpenCV function CvtColor requires the source and destination color spaces as parameters.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.ChannelSeq">
            <summary>
            Ignored by OpenCV
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.DataOrder">
            <summary>
            Interleaved or separate (not used) channel order.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.Origin">
            <summary>
            Data origin: top-left or bottom-right (not used).
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.Align">
            <summary>
            Alignment of image rows (4 or 8). (Ignored by OpenCV)
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.Width">
            <summary>
            Image width
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.Height">
            <summary>
            Image height
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.ROI">
            <summary>
            Region Of Interest (ROI). If not NULL, only this image region will be processed.
            It is always null if generic image is represented as OpenCV image.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.MaskROI">
            <summary>
            Must be NULL in OpenCV.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.ImageId">
            <summary>
            Must be NULL in OpenCV.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.TileInfo">
            <summary>
            Must be NULL in OpenCV.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.ImageSize">
            <summary>
            Image data size in bytes.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.ImageData">
            <summary>
            A pointer to the aligned image data.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.WidthStep">
            <summary>
            The size of an aligned image row, in bytes.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.BorderMode">
            <summary>
            Border completion mode, ignored by OpenCV.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.BorderConst">
            <summary>
            Border completion mode, ignored by OpenCV.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.ImageDataOrigin">
            <summary>
            A pointer to the origin of the image data (not necessarily aligned). This is used for image deallocation.
            During casting between generic image to OpenCV image it is set to null.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.IplImage.FromPointer(System.IntPtr)">
            <summary>
            Converts a pointer to an IplImage structure.
            </summary>
            <param name="pointerToStructure"></param>
            <returns></returns>
        </member>
        <member name="T:Accord.Extensions.Imaging.IplImage.IplChannelDepth">
            <summary>
            Depth constants for IplImage channels.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.IplChannelDepth.IPL_DEPTH_1U">
            <summary>
            Unsigned 1bit
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.IplChannelDepth.IPL_DEPTH_8U">
            <summary>
            Unsigned 8-bit integer
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.IplChannelDepth.IPL_DEPTH_8S">
            <summary>
            Signed 8-bit integer
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.IplChannelDepth.IPL_DEPTH_16U">
            <summary>
            Unsigned 16-bit integer
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.IplChannelDepth.IPL_DEPTH_16S">
            <summary>
            Signed 16-bit integer
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.IplChannelDepth.IPL_DEPTH_32S">
            <summary>
            Signed 32-bit integer.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.IplChannelDepth.IPL_DEPTH_32F">
            <summary>
            Single-precision floating point
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.IplChannelDepth.IPL_DEPTH_64F">
            <summary>
            Double-precision floating point
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.IplImage.ChannelDataOrder">
            <summary>
            IplImage channel data order.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.ChannelDataOrder.INTERLEAVED">
            <summary>
            Interleaved color channels.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.ChannelDataOrder.SEPARATE">
            <summary>
            Separate color channels. (CreateImage only creates images with interleaved channels.)
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.IplImage.DataOrigin">
            <summary>
            IplImage data origin.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.DataOrigin.TopLeft">
            <summary>
            Data origin is located in the top-left corner.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.IplImage.DataOrigin.BottomLeft">
            <summary>
            Data origin is located in the bottom-left corner (Windows bitmap).
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.ImageOpenCVImageConversions">
            <summary>
            Contains methods for casting an generic image to an IplImage.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.ImageOpenCVImageConversions.AsOpenCvImage(Accord.Extensions.Imaging.IImage)">
            <summary>
            Casts an image to OpeCV image (IplImage). No data copy is involved.
            </summary>
            <param name="image">Generic image.</param>
            <returns>OpeCV image format.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.ImageOpenCVImageConversions.AsImage(Accord.Extensions.Imaging.IplImage,System.Action{System.Object})">
            <summary>
            Casts iplImage in generic image representation.
            </summary>
            <param name="iplImage">IplImage structure.</param>
            <param name="destructor">Destructor which is called when created generic image is disposed.</param>
            <returns>Image.</returns>
        </member>
        <member name="T:Accord.Extensions.Imaging.SpatialConvolution">
            <summary>
            Provides extension methods for the image spatial convolution.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.SpatialConvolution.ConvolveUnsafe(System.Single*,System.Int32,System.Int32,System.Int32,System.Int32,System.Single*,System.Int32,System.Int32,System.Single*,System.Int32)">
            <summary>
            Convolves the source image with the specified kernel.
            </summary>
            <param name="source">Source data pointer.</param>
            <param name="sourceWidth">Source width.</param>
            <param name="sourceHeight">Source height.</param>
            <param name="sourceStride">Source stride.</param>
            <param name="channelCount">Source channel count.</param>
            <param name="kernel">Kernel pointer.</param>
            <param name="kernelWidth">Kernel width.</param>
            <param name="kernelHeight">Kernel height.</param>
            <param name="destination">Destination pointer.</param>
            <param name="destinationStride">Destination stride.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.SpatialConvolution.Convolve(System.Single[0:,0:],System.Single[0:,0:],Accord.Extensions.Rectangle)">
            <summary>
            Convolves the source image with the specified kernel.
            </summary>
            <param name="source">Source image.</param>
            <param name="kernel">Kernel.</param>
            <param name="area">Working area.</param>
            <returns>Convolved image.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.SpatialConvolution.Convolve(System.Single[0:,0:],System.Single[0:,0:])">
            <summary>
            Convolves the source image with the specified kernel.
            </summary>
            <param name="source">Source image.</param>
            <param name="kernel">Kernel.</param>
            <returns>Convolved image.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.SpatialConvolution.Convolve``1(``0[0:,0:],System.Single[0:,0:])">
            <summary>
            Convolves the source image with the specified kernel.
            </summary>
            <typeparam name="TColor">Color type.</typeparam>
            <param name="source">Source image.</param>
            <param name="kernel">Kernel.</param>
            <returns>Convolved image.</returns>
        </member>
        <member name="T:Accord.Extensions.Imaging.KernelThread">
            <summary>
            Kernel thread structure which represents the working point.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.KernelThread.X">
            <summary>
            Horizontal offset.
            </summary>
        </member>
        <member name="F:Accord.Extensions.Imaging.KernelThread.Y">
            <summary>
            Vertical offset.
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.ParallelLauncher">
            <summary>
            Provides a launch method and extension methods for parallel array processing.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.ParallelLauncher.Launch``1(``0[0:,0:],System.Action{Accord.Extensions.Imaging.KernelThread,``0[0:,0:]},System.Int32,System.Int32)">
            <summary>
            launches the specified kernel function in parallel.
            </summary>
            <typeparam name="T">Array element type.</typeparam>
            <param name="array">Array.</param>
            <param name="kernel">Kernel function.</param>
            <param name="gridX">Horizontal grid size.</param>
            <param name="gridY">Vertical grid size</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.ParallelLauncher.Launch(System.Action{Accord.Extensions.Imaging.KernelThread},System.Int32,System.Int32)">
            <summary>
            Launches the specified kernel function in parallel.
            </summary>
            <param name="kernel">Kernel function.</param>
            <param name="gridX">Horizontal grid size.</param>
            <param name="gridY">Vertical grid size</param>
        </member>
        <member name="T:Accord.Extensions.Imaging.IImage">
            <summary>
            Represents interface to the <see cref="T:Accord.Extensions.Imaging.Image`1"/> class.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.IImage.GetData(System.Int32,System.Int32)">
            <summary>
            Gets image data at specified location.
            </summary>
            <param name="row">Row index.</param>
            <param name="col">Column index.</param>
            <returns>Data pointer.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.IImage.GetData(System.Int32)">
            <summary>
            Gets image data at specified location.
            </summary>
            <param name="row">Row index.</param>
            <returns>Data pointer.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.IImage.GetSubRect(Accord.Extensions.Rectangle)">
            <summary>
            Gets sub-image from specified area. Data is shared.
            </summary>
            <param name="rect">Area of an image for sub-image creation.</param>
            <returns>Sub-image.</returns>
        </member>
        <member name="P:Accord.Extensions.Imaging.IImage.ImageData">
            <summary>
            Gets unmanaged image data.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.IImage.Width">
            <summary>
            Gets image width.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.IImage.Height">
            <summary>
            Gets image height.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.IImage.Stride">
            <summary>
            Gets image stride.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.IImage.Size">
            <summary>
            Gets image size.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.IImage.ColorInfo">
            <summary>
            Gets image color info.
            </summary>
        </member>
        <member name="T:Accord.Extensions.Imaging.Image`1">
            <summary>
            Implements generic image type and provides a basic data manipulation. Other functions are built as extensions making the class light-weight and portable.
            <para>Other extensions and satellite assemblies enables multiple interoperability with other libraries such as AForge.NET, OpenCV, EmguCV.</para>
            </summary>
            <typeparam name="TColor">Color type. The structure must be blittable.</typeparam>
        </member>
        <member name="M:Accord.Extensions.Imaging.Image`1.Lock(`0[0:,0:])">
            <summary>
            Creates an unmanaged image by pinning the provided array.
            <para>No data is copied.</para>
            </summary>
            <param name="array">Array to lock.</param>
            <returns>Unmanaged image.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.Image`1.#ctor(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Object,System.Action{System.Object})">
            <summary>
            Constructs an image from unmanaged data. Data is shared.
            </summary>
            <param name="imageData">Pointer to unmanaged data.</param>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="stride">Image stride.</param>
            <param name="parentReference">To prevent object from deallocating use this parameter.</param>
            <param name="parentDestructor">If a parent needs to be destroyed or release use this function. (e.g. unpin object - GCHandle)</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.Image`1.GetData(System.Int32,System.Int32)">
            <summary>
            Gets image data at specified location.
            </summary>
            <param name="row">Row index.</param>
            <param name="col">Column index.</param>
            <returns>Data pointer.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.Image`1.GetData(System.Int32)">
            <summary>
            Gets image data at specified location.
            </summary>
            <param name="row">Row index.</param>
            <returns>Data pointer.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.Image`1.GetSubRect(Accord.Extensions.Rectangle)">
            <summary>
            Gets sub-image from specified area. Data is shared.
            </summary>
            <param name="rect">Area of an image for sub-image creation.</param>
            <returns>Sub-image.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.Image`1.Accord#Extensions#Imaging#IImage#GetSubRect(Accord.Extensions.Rectangle)">
            <summary>
            Gets sub-image from specified area. Data is shared.
            </summary>
            <param name="rect">Area of an image for sub-image creation.</param>
            <returns>Sub-image.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.Image`1.Equals(Accord.Extensions.Imaging.IImage)">
            <summary>
            Compares this image to another image. Only pointer location and image size are compared.
            There is no data compassion.
            </summary>
            <param name="other">Other image.</param>
            <returns>Whether two images are equal or not.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.Image`1.Equals(System.Object)">
            <summary>
            Compares this image to another object. Internally the function overload is called.
            </summary>
            <param name="obj">Other.</param>
            <returns>Is the image equal to an object or not.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.Image`1.GetHashCode">
            <summary>
            Image's hash code. Pointer address is used as hash code.
            </summary>
            <returns>Image's hash code.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.Image`1.Dispose">
            <summary>
            Disposes generic image. 
            In case if data is allocated it is released.
            If data is shared parent reference (if exists) and parent handle (if exist) is released.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.Image`1.Finalize">
            <summary>
            Disposes the image.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.Image`1.ImageData">
            <summary>
            Gets unmanaged image data.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.Image`1.Width">
            <summary>
            Gets image width.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.Image`1.Height">
            <summary>
            Gets image height.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.Image`1.Stride">
            <summary>
            Gets image stride - number of bytes per image row.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.Image`1.Size">
            <summary>
            Gets image size.
            </summary>
        </member>
        <member name="P:Accord.Extensions.Imaging.Image`1.ColorInfo">
            <summary>
            Gets image color info.
            </summary>
        </member>
    </members>
</doc>
